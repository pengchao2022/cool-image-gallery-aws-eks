apiVersion: batch/v1
kind: Job
metadata:
  name: community-db-setup
  namespace: comic-website
spec:
  template:
    spec:
      serviceAccountName: comic-backend-sa
      containers:
      - name: community-db-setup
        image: postgres:14-alpine
        command: ["/bin/sh"]
        args:
          - "-c"
          - |
            set -e
            echo "🚀 Starting Community database setup..."
            
            # 等待数据库可用
            echo "⏳ Waiting for database to be available..."
            until pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME; do
              echo "Waiting for database connection..."
              sleep 2
            done
            
            # 创建 Community 数据库
            echo "🗃 Creating Community database..."
            PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME << EOF
            CREATE DATABASE $COMMUNITY_DB;
            EOF
            
            # 创建 Community 数据库用户
            echo "👤 Creating Community database user..."
            PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME << EOF
            CREATE USER $COMMUNITY_USER WITH PASSWORD '$COMMUNITY_PASSWORD';
            GRANT ALL PRIVILEGES ON DATABASE $COMMUNITY_DB TO $COMMUNITY_USER;
            EOF
            
            echo "✅ Community database setup completed successfully!"
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: rds-secret
              key: host
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: "comicadmin"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rds-secret
              key: password
        - name: DB_NAME
          value: "comicdb"
        - name: COMMUNITY_DB
          value: "communitydb"
        - name: COMMUNITY_USER
          value: "community_user"
        - name: COMMUNITY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: community-db-password
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
      restartPolicy: OnFailure
  backoffLimit: 2
  activeDeadlineSeconds: 300
---
apiVersion: batch/v1
kind: Job
metadata:
  name: community-schema-setup
  namespace: comic-website
spec:
  template:
    spec:
      serviceAccountName: comic-backend-sa
      containers:
      - name: community-schema-setup
        image: postgres:14-alpine
        command: ["/bin/sh"]
        args:
          - "-c"
          - |
            set -e
            echo "🚀 Setting up Community database schema..."
            
            # 等待数据库可用
            echo "⏳ Waiting for Community database to be available..."
            until pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME; do
              echo "Waiting for database connection..."
              sleep 2
            done
            
            # 执行 SQL 迁移文件
            echo "📦 Running community database migrations..."
            
            # 创建基本的社区表结构
            PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME << EOF
            -- 创建帖子表
            CREATE TABLE IF NOT EXISTS posts (
              id SERIAL PRIMARY KEY,
              title VARCHAR(255) NOT NULL,
              content TEXT,
              author_id INTEGER,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
              updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
            
            -- 创建评论表
            CREATE TABLE IF NOT EXISTS comments (
              id SERIAL PRIMARY KEY,
              post_id INTEGER REFERENCES posts(id),
              content TEXT,
              author_id INTEGER,
              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            );
            
            -- 为社区用户授予权限
            GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO $DB_USER;
            GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO $DB_USER;
            EOF
            
            echo "✅ Community schema setup completed successfully!"
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: rds-secret
              key: host
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: "community_user"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: community-db-password
        - name: DB_NAME
          value: "communitydb"
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
      restartPolicy: OnFailure
  backoffLimit: 2
  activeDeadlineSeconds: 300