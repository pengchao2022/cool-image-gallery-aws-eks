apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: comic-website
  labels:
    app: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      serviceAccountName: comic-backend-sa
      containers:
      - name: backend
        image: 319998871902.dkr.ecr.us-east-1.amazonaws.com/comic-website-prod-backend:latest
        ports:
        - containerPort: 3000
        env:
        # 数据库配置
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: rds-secret
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: rds-secret
              key: port
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: rds-secret
              key: database
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: rds-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rds-secret
              key: password
        # 应用配置
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: backend-secret
              key: jwt-secret
        - name: JWT_EXPIRES_IN
          value: "7d"
        # AWS 配置
        - name: AWS_REGION
          value: "us-east-1"
        - name: S3_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              name: s3-secret
              key: bucket-name
        # API 配置
        - name: API_BASE_URL
          value: "/api"
        resources:
          requests:
            memory: "512Mi"  # 🔥 增加内存请求
            cpu: "250m"
          limits:
            memory: "1Gi"    # 🔥 增加内存限制
            cpu: "500m"
        # 🔥 修正的健康检查配置
        startupProbe:
          httpGet:
            path: /health    # 🔥 修正：使用 /health 而不是 /api/health
            port: 3000
          initialDelaySeconds: 10   # 启动后10秒开始检查
          periodSeconds: 10         # 每10秒检查一次
          failureThreshold: 30      # 最多尝试30次（300秒）
          timeoutSeconds: 5
        
        readinessProbe:
          httpGet:
            path: /health    # 🔥 修正：使用 /health 而不是 /api/health
            port: 3000
          initialDelaySeconds: 5    # 启动探针通过后5秒开始
          periodSeconds: 10         # 每10秒检查一次
          timeoutSeconds: 5
          failureThreshold: 3       # 连续失败3次才标记为未就绪
          successThreshold: 1
        
        livenessProbe:
          httpGet:
            path: /health    # 🔥 修正：使用 /health 而不是 /api/health
            port: 3000
          initialDelaySeconds: 30   # 应用完全启动后30秒开始
          periodSeconds: 30         # 每30秒检查一次
          timeoutSeconds: 10
          failureThreshold: 3       # 连续失败3次才重启容器
          successThreshold: 1