name: üöÄ Deploy Backend to AWS EKS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: comic-website-backend
  CLUSTER_NAME: comic-cluster

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üß© Checkout repository
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # --- Debug Step: Ê£ÄÊü• AWS Âá≠ËØÅ‰∏é ECR ‰ªìÂ∫ì ---
      - name: üîç Debug AWS Identity & ECR Check
        run: |
          echo "üîπ Checking AWS identity..."
          aws sts get-caller-identity
          echo "üîπ Checking ECR repository..."
          aws ecr describe-repositories \
            --repository-names ${{ env.ECR_REPOSITORY }} \
            --region ${{ env.AWS_REGION }} || echo "‚ö†Ô∏è Repository not found or access denied!"

      - name: üîç Get AWS Account ID
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "ACCOUNT_ID=$ACCOUNT_ID" >> $GITHUB_ENV

      - name: üîê Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} \
          | docker login --username AWS \
            --password-stdin https://${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: üõ† Build Docker image
        run: |
          docker build -t ${{ env.ECR_REPOSITORY }} .
          docker tag ${{ env.ECR_REPOSITORY }}:latest \
            ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

      - name: üì¶ Push image to ECR
        run: |
          docker push ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

      - name: ‚öôÔ∏è Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: üöÄ Deploy to EKS
        run: |
          kubectl set image deployment/${{ env.ECR_REPOSITORY }} \
            ${{ env.ECR_REPOSITORY }}=${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          kubectl rollout status deployment/${{ env.ECR_REPOSITORY }}
